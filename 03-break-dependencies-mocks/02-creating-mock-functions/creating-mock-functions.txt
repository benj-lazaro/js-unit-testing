Creating Mock Functions
-----------------------
- A Mock function is a function that imitates the behavior of a real function
    - It is used for testing a function (unit) in isolation


- To create a Mock function
    - Import objects vi, it, expect, describe from Vitest
    
    - The "vi" object used with the method .fn()
        - Returns / instantiates a Mock function

- To imitate a behavior of an function, use the following methods:
    - .mockReturnValue()    = Returns a value
    - .mockResolvedValue()  = Returns a promise 
    - .mockImplementation() = Provides the logic to the Mock function
    

- Use the following Matches to write an assertion for the Mock function
    - .toHaveBeenCalled()       = Check if the Mock function have been called
    - .toHaveBeenCalledWith()   = Check if the Mock function is called w/ a matching argurment value
    - .toHaveBeenCalledOnce()   = Check if the Mock function is called once
